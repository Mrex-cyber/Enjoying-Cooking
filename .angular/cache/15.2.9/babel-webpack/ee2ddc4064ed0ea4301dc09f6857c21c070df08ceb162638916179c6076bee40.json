{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CookingService {\n  constructor(http) {\n    this.http = http;\n    this.cookingsUrl = 'https://localhost:32768/getcooks';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  getAllCookings() {\n    return this.http.get(this.cookingsUrl);\n  }\n}\nCookingService.ɵfac = function CookingService_Factory(t) {\n  return new (t || CookingService)(i0.ɵɵinject(i1.HttpClient));\n};\nCookingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CookingService,\n  factory: CookingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,cAAc;EAO1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,gBAAW,GAAG,kCAAkC;IAExD,gBAAW,GAAG;MACbC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QAAE,cAAc,EAAG;MAAkB,CAAE;KAC/D;EAEsC;EAExCK,cAAc;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACC,WAAW,CAAC;EACnD;;AAXYN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAO,SAAdP,cAAc;EAAAQ,YAFb;AAAM","names":["HttpHeaders","CookingService","constructor","http","headers","getAllCookings","get","cookingsUrl","factory","providedIn"],"sourceRoot":"","sources":["D:\\Pet-projects\\EnjoyingCooking\\enjoying-cooking\\src\\app\\cooking.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ICooking } from './ICooking';\nimport { IUser } from './IUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookingService {\n private cookingsUrl = 'https://localhost:32768/getcooks';\n\n httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type' : 'application/json' })\n  };\n\n constructor(private http: HttpClient) { }\n\n getAllCookings(): Observable<ICooking[]>{\n  return this.http.get<ICooking[]>(this.cookingsUrl);\n }\n }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
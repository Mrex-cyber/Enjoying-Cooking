{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CookingService {\n  constructor(http) {\n    this.http = http;\n    this.cookingsUrl = 'https://localhost:32770/';\n    this.token = \"\";\n    // , \"Cache-Control\": \"public,max-age=600\"\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.cookings = [];\n  }\n  getAllCookings() {\n    this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n    return this.http.get(this.cookingsUrl + \"signin\", this.httpOptions);\n    this.httpOptions.headers.delete('Authorization');\n  }\n  userSignIn(login, password) {\n    return this.http.post(this.cookingsUrl, {\n      email: login,\n      password: password\n    }, this.httpOptions);\n  }\n  userSignUp(userName, login, password) {\n    return this.http.post(this.cookingsUrl, {\n      userName: userName,\n      email: login,\n      password: password\n    }, this.httpOptions);\n  }\n}\nCookingService.ɵfac = function CookingService_Factory(t) {\n  return new (t || CookingService)(i0.ɵɵinject(i1.HttpClient));\n};\nCookingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CookingService,\n  factory: CookingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,cAAc;EAS1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IARhB,gBAAW,GAAG,0BAA0B;IAEhD,UAAK,GAAY,EAAE;IACnB;IACA,gBAAW,GAAG;MACbC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QAAE,cAAc,EAAG;MAAkB,CAAC;KAC9D;IAGF,aAAQ,GAAe,EAAE;EADe;EAGxCK,cAAc;IACb,IAAI,CAACC,WAAW,CAACF,OAAO,CAACG,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACC,KAAK,CAAC;IACrE,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAa,IAAI,CAACC,WAAW,GAAG,QAAQ,EAAE,IAAI,CAACJ,WAAW,CAAC;IAC/E,IAAI,CAACA,WAAW,CAACF,OAAO,CAACO,MAAM,CAAC,eAAe,CAAC;EACjD;EAEAC,UAAU,CAACC,KAAa,EAAEC,QAAgB;IACzC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAS,IAAI,CAACL,WAAW,EAAE;MAACM,KAAK,EAAEH,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC,EAAE,IAAI,CAACR,WAAW,CAAC;EACtG;EACAW,UAAU,CAACC,QAAgB,EAAEL,KAAa,EAAEC,QAAgB;IAC3D,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,IAAI,CAACL,WAAW,EAAE;MAACQ,QAAQ,EAAEA,QAAQ;MAAEF,KAAK,EAAEH,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC,EAAE,IAAI,CAACR,WAAW,CAAC;EAClH;;AAvBYL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAkB,SAAdlB,cAAc;EAAAmB,YAFb;AAAM","names":["HttpHeaders","CookingService","constructor","http","headers","getAllCookings","httpOptions","set","token","get","cookingsUrl","delete","userSignIn","login","password","post","email","userSignUp","userName","factory","providedIn"],"sourceRoot":"","sources":["D:\\Pet-projects\\EnjoyingCooking\\enjoying-cooking\\src\\app\\cooking.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { ICooking } from './ICooking';\nimport { IUser } from './IUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookingService {\n private cookingsUrl = 'https://localhost:32770/';\n\n token : string = \"\";\n // , \"Cache-Control\": \"public,max-age=600\"\n httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type' : 'application/json'})\n  };\n\n constructor(private http: HttpClient) { }\n cookings: ICooking[] = [];\n\n getAllCookings(): Observable<ICooking[]>{\n  this.httpOptions.headers.set('Authorization', 'Bearer ' + this.token);\n  return this.http.get<ICooking[]>(this.cookingsUrl + \"signin\", this.httpOptions);\n  this.httpOptions.headers.delete('Authorization');\n }\n\n userSignIn(login: string, password: string) : Observable<string> {\n  return this.http.post<string>(this.cookingsUrl, {email: login, password: password}, this.httpOptions);\n }\n userSignUp(userName: string, login: string, password: string) {\n  return this.http.post(this.cookingsUrl, {userName: userName, email: login, password: password}, this.httpOptions);\n }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}